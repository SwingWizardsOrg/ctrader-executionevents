// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.2
// source: OpenApiMessages.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// * Request for the authorizing an application to work with the cTrader platform Proxies.
type ProtoOAApplicationAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType  *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2100" json:"payloadType,omitempty"`
	ClientId     *string             `protobuf:"bytes,2,req,name=clientId" json:"clientId,omitempty"`         //The unique Client ID provided during the registration.
	ClientSecret *string             `protobuf:"bytes,3,req,name=clientSecret" json:"clientSecret,omitempty"` //The unique Client Secret provided during the registration
}

// Default values for ProtoOAApplicationAuthReq fields.
const (
	Default_ProtoOAApplicationAuthReq_PayloadType = ProtoOAPayloadType_PROTO_OA_APPLICATION_AUTH_REQ
)

func (x *ProtoOAApplicationAuthReq) Reset() {
	*x = ProtoOAApplicationAuthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenApiMessages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOAApplicationAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOAApplicationAuthReq) ProtoMessage() {}

func (x *ProtoOAApplicationAuthReq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenApiMessages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOAApplicationAuthReq.ProtoReflect.Descriptor instead.
func (*ProtoOAApplicationAuthReq) Descriptor() ([]byte, []int) {
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoOAApplicationAuthReq) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOAApplicationAuthReq_PayloadType
}

func (x *ProtoOAApplicationAuthReq) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *ProtoOAApplicationAuthReq) GetClientSecret() string {
	if x != nil && x.ClientSecret != nil {
		return *x.ClientSecret
	}
	return ""
}

// * Response to the ProtoOAApplicationAuthReq request.
type ProtoOAApplicationAuthRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2101" json:"payloadType,omitempty"`
}

// Default values for ProtoOAApplicationAuthRes fields.
const (
	Default_ProtoOAApplicationAuthRes_PayloadType = ProtoOAPayloadType_PROTO_OA_APPLICATION_AUTH_RES
)

func (x *ProtoOAApplicationAuthRes) Reset() {
	*x = ProtoOAApplicationAuthRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenApiMessages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOAApplicationAuthRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOAApplicationAuthRes) ProtoMessage() {}

func (x *ProtoOAApplicationAuthRes) ProtoReflect() protoreflect.Message {
	mi := &file_OpenApiMessages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOAApplicationAuthRes.ProtoReflect.Descriptor instead.
func (*ProtoOAApplicationAuthRes) Descriptor() ([]byte, []int) {
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoOAApplicationAuthRes) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOAApplicationAuthRes_PayloadType
}

// * Request for getting Trader's deals historical data (execution details).
type ProtoOADealListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2133" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	FromTimestamp       *int64              `protobuf:"varint,3,req,name=fromTimestamp" json:"fromTimestamp,omitempty"`             // The UNIX time from which the search starts >=0 (1-1-1970). Validation: toTimestamp - fromTimestamp <= 604800000 (1 week).
	ToTimestamp         *int64              `protobuf:"varint,4,req,name=toTimestamp" json:"toTimestamp,omitempty"`                 // The UNIX time where to stop searching <= 2147483646000 (19-1-2038).
	MaxRows             *int32              `protobuf:"varint,5,opt,name=maxRows" json:"maxRows,omitempty"`                         // The maximum number of the deals to return.
}

// Default values for ProtoOADealListReq fields.
const (
	Default_ProtoOADealListReq_PayloadType = ProtoOAPayloadType_PROTO_OA_DEAL_LIST_REQ
)

func (x *ProtoOADealListReq) Reset() {
	*x = ProtoOADealListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenApiMessages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOADealListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOADealListReq) ProtoMessage() {}

func (x *ProtoOADealListReq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenApiMessages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOADealListReq.ProtoReflect.Descriptor instead.
func (*ProtoOADealListReq) Descriptor() ([]byte, []int) {
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoOADealListReq) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOADealListReq_PayloadType
}

func (x *ProtoOADealListReq) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOADealListReq) GetFromTimestamp() int64 {
	if x != nil && x.FromTimestamp != nil {
		return *x.FromTimestamp
	}
	return 0
}

func (x *ProtoOADealListReq) GetToTimestamp() int64 {
	if x != nil && x.ToTimestamp != nil {
		return *x.ToTimestamp
	}
	return 0
}

func (x *ProtoOADealListReq) GetMaxRows() int32 {
	if x != nil && x.MaxRows != nil {
		return *x.MaxRows
	}
	return 0
}

// * Generic response when an ERROR occurred.
type ProtoOAErrorRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType             *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2142" json:"payloadType,omitempty"`
	CtidTraderAccountId     *int64              `protobuf:"varint,2,opt,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"`         //The unique identifier of the trader's account in cTrader platform.
	ErrorCode               *string             `protobuf:"bytes,3,req,name=errorCode" json:"errorCode,omitempty"`                              // The name of the ProtoErrorCode or the other custom ErrorCodes (e.g. ProtoCHErrorCode).
	Description             *string             `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`                          // The error description.
	MaintenanceEndTimestamp *int64              `protobuf:"varint,5,opt,name=maintenanceEndTimestamp" json:"maintenanceEndTimestamp,omitempty"` // The timestamp in seconds when the current maintenance session will be ended.
}

// Default values for ProtoOAErrorRes fields.
const (
	Default_ProtoOAErrorRes_PayloadType = ProtoOAPayloadType_PROTO_OA_ERROR_RES
)

func (x *ProtoOAErrorRes) Reset() {
	*x = ProtoOAErrorRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenApiMessages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOAErrorRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOAErrorRes) ProtoMessage() {}

func (x *ProtoOAErrorRes) ProtoReflect() protoreflect.Message {
	mi := &file_OpenApiMessages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOAErrorRes.ProtoReflect.Descriptor instead.
func (*ProtoOAErrorRes) Descriptor() ([]byte, []int) {
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoOAErrorRes) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOAErrorRes_PayloadType
}

func (x *ProtoOAErrorRes) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOAErrorRes) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

func (x *ProtoOAErrorRes) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ProtoOAErrorRes) GetMaintenanceEndTimestamp() int64 {
	if x != nil && x.MaintenanceEndTimestamp != nil {
		return *x.MaintenanceEndTimestamp
	}
	return 0
}

// * Request for getting data of Trader's Account.
type ProtoOATraderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2121" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
}

// Default values for ProtoOATraderReq fields.
const (
	Default_ProtoOATraderReq_PayloadType = ProtoOAPayloadType_PROTO_OA_TRADER_REQ
)

func (x *ProtoOATraderReq) Reset() {
	*x = ProtoOATraderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenApiMessages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOATraderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOATraderReq) ProtoMessage() {}

func (x *ProtoOATraderReq) ProtoReflect() protoreflect.Message {
	mi := &file_OpenApiMessages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOATraderReq.ProtoReflect.Descriptor instead.
func (*ProtoOATraderReq) Descriptor() ([]byte, []int) {
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoOATraderReq) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOATraderReq_PayloadType
}

func (x *ProtoOATraderReq) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

// * Response to the ProtoOATraderReq request.
type ProtoOATraderRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2122" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	Trader              *ProtoOATrader      `protobuf:"bytes,3,req,name=trader" json:"trader,omitempty"`                            // The Trader account information.
}

// Default values for ProtoOATraderRes fields.
const (
	Default_ProtoOATraderRes_PayloadType = ProtoOAPayloadType_PROTO_OA_TRADER_RES
)

func (x *ProtoOATraderRes) Reset() {
	*x = ProtoOATraderRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenApiMessages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOATraderRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOATraderRes) ProtoMessage() {}

func (x *ProtoOATraderRes) ProtoReflect() protoreflect.Message {
	mi := &file_OpenApiMessages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOATraderRes.ProtoReflect.Descriptor instead.
func (*ProtoOATraderRes) Descriptor() ([]byte, []int) {
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoOATraderRes) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOATraderRes_PayloadType
}

func (x *ProtoOATraderRes) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOATraderRes) GetTrader() *ProtoOATrader {
	if x != nil {
		return x.Trader
	}
	return nil
}

<<<<<<< HEAD
=======
// * Event that is sent following the successful order acceptance or execution by the server. Acts as response to the ProtoOANewOrderReq, ProtoOACancelOrderReq, ProtoOAAmendOrderReq, ProtoOAAmendPositionSLTPReq, ProtoOAClosePositionReq requests. Also, the event is sent when a Deposit/Withdrawal took place.
type ProtoOAExecutionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType          *ProtoOAPayloadType          `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2126" json:"payloadType,omitempty"`
	CtidTraderAccountId  *int64                       `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"`                        // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	ExecutionType        *ProtoOAExecutionType        `protobuf:"varint,3,req,name=executionType,enum=messages.ProtoOAExecutionType" json:"executionType,omitempty"` // Type of the order operation. For example: ACCEPTED, FILLED, etc.
	Position             *ProtoOAPosition             `protobuf:"bytes,4,opt,name=position" json:"position,omitempty"`                                               // Reference to the position linked with the execution
	Order                *ProtoOAOrder                `protobuf:"bytes,5,opt,name=order" json:"order,omitempty"`                                                     // Reference to the initial order.
	Deal                 *ProtoOADeal                 `protobuf:"bytes,6,opt,name=deal" json:"deal,omitempty"`                                                       // Reference to the deal (execution).
	BonusDepositWithdraw *ProtoOABonusDepositWithdraw `protobuf:"bytes,7,opt,name=bonusDepositWithdraw" json:"bonusDepositWithdraw,omitempty"`                       // Reference to the Bonus Deposit or Withdrawal operation.
	DepositWithdraw      *ProtoOADepositWithdraw      `protobuf:"bytes,8,opt,name=depositWithdraw" json:"depositWithdraw,omitempty"`                                 // Reference to the Deposit or Withdrawal operation.
	ErrorCode            *string                      `protobuf:"bytes,9,opt,name=errorCode" json:"errorCode,omitempty"`                                             //The name of the ProtoErrorCode or the other custom ErrorCodes (e.g. ProtoCHErrorCode).
	IsServerEvent        *bool                        `protobuf:"varint,10,opt,name=isServerEvent" json:"isServerEvent,omitempty"`                                   // If TRUE then the event generated by the server logic instead of the trader's request. (e.g. stop-out).
}

// Default values for ProtoOAExecutionEvent fields.
const (
	Default_ProtoOAExecutionEvent_PayloadType = ProtoOAPayloadType_PROTO_OA_EXECUTION_EVENT
)

func (x *ProtoOAExecutionEvent) Reset() {
	*x = ProtoOAExecutionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_OpenApiMessages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOAExecutionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOAExecutionEvent) ProtoMessage() {}

func (x *ProtoOAExecutionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_OpenApiMessages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOAExecutionEvent.ProtoReflect.Descriptor instead.
func (*ProtoOAExecutionEvent) Descriptor() ([]byte, []int) {
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoOAExecutionEvent) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOAExecutionEvent_PayloadType
}

func (x *ProtoOAExecutionEvent) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOAExecutionEvent) GetExecutionType() ProtoOAExecutionType {
	if x != nil && x.ExecutionType != nil {
		return *x.ExecutionType
	}
	return ProtoOAExecutionType_ORDER_ACCEPTED
}

func (x *ProtoOAExecutionEvent) GetPosition() *ProtoOAPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ProtoOAExecutionEvent) GetOrder() *ProtoOAOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *ProtoOAExecutionEvent) GetDeal() *ProtoOADeal {
	if x != nil {
		return x.Deal
	}
	return nil
}

func (x *ProtoOAExecutionEvent) GetBonusDepositWithdraw() *ProtoOABonusDepositWithdraw {
	if x != nil {
		return x.BonusDepositWithdraw
	}
	return nil
}

func (x *ProtoOAExecutionEvent) GetDepositWithdraw() *ProtoOADepositWithdraw {
	if x != nil {
		return x.DepositWithdraw
	}
	return nil
}

func (x *ProtoOAExecutionEvent) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

func (x *ProtoOAExecutionEvent) GetIsServerEvent() bool {
	if x != nil && x.IsServerEvent != nil {
		return *x.IsServerEvent
	}
	return false
}

>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
// * Request for the authorizing trading account session. Requires established authorized connection with the client application using ProtoOAApplicationAuthReq.
type ProtoOAAccountAuthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2102" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // The unique identifier of the trader's account in cTrader platform.
	AccessToken         *string             `protobuf:"bytes,3,req,name=accessToken" json:"accessToken,omitempty"`                  // The Access Token issued for providing access to the Trader's Account.
}

// Default values for ProtoOAAccountAuthReq fields.
const (
	Default_ProtoOAAccountAuthReq_PayloadType = ProtoOAPayloadType_PROTO_OA_ACCOUNT_AUTH_REQ
)

func (x *ProtoOAAccountAuthReq) Reset() {
	*x = ProtoOAAccountAuthReq{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[6]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[7]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOAAccountAuthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOAAccountAuthReq) ProtoMessage() {}

func (x *ProtoOAAccountAuthReq) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[6]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[7]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOAAccountAuthReq.ProtoReflect.Descriptor instead.
func (*ProtoOAAccountAuthReq) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{6}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{7}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOAAccountAuthReq) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOAAccountAuthReq_PayloadType
}

func (x *ProtoOAAccountAuthReq) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOAAccountAuthReq) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

// * Response to the ProtoOAApplicationAuthRes request.
type ProtoOAAccountAuthRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2103" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // The unique identifier of the trader's account in cTrader platform.
}

// Default values for ProtoOAAccountAuthRes fields.
const (
	Default_ProtoOAAccountAuthRes_PayloadType = ProtoOAPayloadType_PROTO_OA_ACCOUNT_AUTH_RES
)

func (x *ProtoOAAccountAuthRes) Reset() {
	*x = ProtoOAAccountAuthRes{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[7]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[8]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOAAccountAuthRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOAAccountAuthRes) ProtoMessage() {}

func (x *ProtoOAAccountAuthRes) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[7]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[8]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOAAccountAuthRes.ProtoReflect.Descriptor instead.
func (*ProtoOAAccountAuthRes) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{7}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{8}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOAAccountAuthRes) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOAAccountAuthRes_PayloadType
}

func (x *ProtoOAAccountAuthRes) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

// * Request for getting Trader's current open positions and pending orders data.
type ProtoOAReconcileReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2124" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
}

// Default values for ProtoOAReconcileReq fields.
const (
	Default_ProtoOAReconcileReq_PayloadType = ProtoOAPayloadType_PROTO_OA_RECONCILE_REQ
)

func (x *ProtoOAReconcileReq) Reset() {
	*x = ProtoOAReconcileReq{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[8]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[9]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOAReconcileReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOAReconcileReq) ProtoMessage() {}

func (x *ProtoOAReconcileReq) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[8]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[9]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOAReconcileReq.ProtoReflect.Descriptor instead.
func (*ProtoOAReconcileReq) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{8}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{9}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOAReconcileReq) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOAReconcileReq_PayloadType
}

func (x *ProtoOAReconcileReq) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

// * The response to the ProtoOAReconcileReq request.
type ProtoOAReconcileRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2125" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	Position            []*ProtoOAPosition  `protobuf:"bytes,3,rep,name=position" json:"position,omitempty"`                        // The list of trader's account open positions.
	Order               []*ProtoOAOrder     `protobuf:"bytes,4,rep,name=order" json:"order,omitempty"`                              // The list of trader's account pending orders.
}

// Default values for ProtoOAReconcileRes fields.
const (
	Default_ProtoOAReconcileRes_PayloadType = ProtoOAPayloadType_PROTO_OA_RECONCILE_RES
)

func (x *ProtoOAReconcileRes) Reset() {
	*x = ProtoOAReconcileRes{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[9]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[10]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOAReconcileRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOAReconcileRes) ProtoMessage() {}

func (x *ProtoOAReconcileRes) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[9]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[10]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOAReconcileRes.ProtoReflect.Descriptor instead.
func (*ProtoOAReconcileRes) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{9}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{10}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOAReconcileRes) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOAReconcileRes_PayloadType
}

func (x *ProtoOAReconcileRes) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOAReconcileRes) GetPosition() []*ProtoOAPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *ProtoOAReconcileRes) GetOrder() []*ProtoOAOrder {
	if x != nil {
		return x.Order
	}
	return nil
}

// * Request for getting a full symbol entity.
type ProtoOASymbolByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2116" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	SymbolId            []int64             `protobuf:"varint,3,rep,name=symbolId" json:"symbolId,omitempty"`                       // Unique identifier of the symbol in cTrader platform.
}

// Default values for ProtoOASymbolByIdReq fields.
const (
	Default_ProtoOASymbolByIdReq_PayloadType = ProtoOAPayloadType_PROTO_OA_SYMBOL_BY_ID_REQ
)

func (x *ProtoOASymbolByIdReq) Reset() {
	*x = ProtoOASymbolByIdReq{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[10]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[11]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOASymbolByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOASymbolByIdReq) ProtoMessage() {}

func (x *ProtoOASymbolByIdReq) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[10]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[11]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOASymbolByIdReq.ProtoReflect.Descriptor instead.
func (*ProtoOASymbolByIdReq) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{10}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{11}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOASymbolByIdReq) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOASymbolByIdReq_PayloadType
}

func (x *ProtoOASymbolByIdReq) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOASymbolByIdReq) GetSymbolId() []int64 {
	if x != nil {
		return x.SymbolId
	}
	return nil
}

// * Response to the ProtoOASymbolByIdReq request.
type ProtoOASymbolByIdRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2117" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	Symbol              []*ProtoOASymbol    `protobuf:"bytes,3,rep,name=symbol" json:"symbol,omitempty"`                            // Symbol entity with the full set of fields.
}

// Default values for ProtoOASymbolByIdRes fields.
const (
	Default_ProtoOASymbolByIdRes_PayloadType = ProtoOAPayloadType_PROTO_OA_SYMBOL_BY_ID_RES
)

func (x *ProtoOASymbolByIdRes) Reset() {
	*x = ProtoOASymbolByIdRes{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[11]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[12]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOASymbolByIdRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOASymbolByIdRes) ProtoMessage() {}

func (x *ProtoOASymbolByIdRes) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[11]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[12]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOASymbolByIdRes.ProtoReflect.Descriptor instead.
func (*ProtoOASymbolByIdRes) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{11}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{12}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOASymbolByIdRes) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOASymbolByIdRes_PayloadType
}

func (x *ProtoOASymbolByIdRes) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOASymbolByIdRes) GetSymbol() []*ProtoOASymbol {
	if x != nil {
		return x.Symbol
	}
	return nil
}

// * Request for subscribing on spot events of the specified symbol.
type ProtoOASubscribeSpotsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2127" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	SymbolId            []int64             `protobuf:"varint,3,rep,name=symbolId" json:"symbolId,omitempty"`                       // Unique identifier of the Symbol in cTrader platform.
}

// Default values for ProtoOASubscribeSpotsReq fields.
const (
	Default_ProtoOASubscribeSpotsReq_PayloadType = ProtoOAPayloadType_PROTO_OA_SUBSCRIBE_SPOTS_REQ
)

func (x *ProtoOASubscribeSpotsReq) Reset() {
	*x = ProtoOASubscribeSpotsReq{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[12]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[13]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOASubscribeSpotsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOASubscribeSpotsReq) ProtoMessage() {}

func (x *ProtoOASubscribeSpotsReq) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[12]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[13]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOASubscribeSpotsReq.ProtoReflect.Descriptor instead.
func (*ProtoOASubscribeSpotsReq) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{12}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{13}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOASubscribeSpotsReq) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOASubscribeSpotsReq_PayloadType
}

func (x *ProtoOASubscribeSpotsReq) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOASubscribeSpotsReq) GetSymbolId() []int64 {
	if x != nil {
		return x.SymbolId
	}
	return nil
}

// * Response to the ProtoOASubscribeSpotsReq request.
type ProtoOASubscribeSpotsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2128" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
}

// Default values for ProtoOASubscribeSpotsRes fields.
const (
	Default_ProtoOASubscribeSpotsRes_PayloadType = ProtoOAPayloadType_PROTO_OA_SUBSCRIBE_SPOTS_RES
)

func (x *ProtoOASubscribeSpotsRes) Reset() {
	*x = ProtoOASubscribeSpotsRes{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[13]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[14]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOASubscribeSpotsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOASubscribeSpotsRes) ProtoMessage() {}

func (x *ProtoOASubscribeSpotsRes) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[13]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[14]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOASubscribeSpotsRes.ProtoReflect.Descriptor instead.
func (*ProtoOASubscribeSpotsRes) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{13}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{14}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOASubscribeSpotsRes) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOASubscribeSpotsRes_PayloadType
}

func (x *ProtoOASubscribeSpotsRes) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

// * Event that is sent when a new spot event is generated on the server side. Requires subscription on the spot events, see ProtoOASubscribeSpotsReq.
type ProtoOASpotEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2131" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	SymbolId            *int64              `protobuf:"varint,3,req,name=symbolId" json:"symbolId,omitempty"`                       // Unique identifier of the Symbol in cTrader platform.
	Bid                 *uint64             `protobuf:"varint,4,opt,name=bid" json:"bid,omitempty"`                                 // Bid price. Specified in 1/100_000 of unit of a price. (e.g. 1.23 -> 123_000)
	Ask                 *uint64             `protobuf:"varint,5,opt,name=ask" json:"ask,omitempty"`                                 // Ask price. Specified in 1/100_000 of unit of a price.
	Trendbar            []*ProtoOATrendbar  `protobuf:"bytes,6,rep,name=trendbar" json:"trendbar,omitempty"`                        // Returns live trend bar. Requires subscription on the trend bars.
	SessionClose        *uint64             `protobuf:"varint,7,opt,name=sessionClose" json:"sessionClose,omitempty"`               //Last session close. Specified in 1/100_000 of unit of a price.
}

// Default values for ProtoOASpotEvent fields.
const (
	Default_ProtoOASpotEvent_PayloadType = ProtoOAPayloadType_PROTO_OA_SPOT_EVENT
)

func (x *ProtoOASpotEvent) Reset() {
	*x = ProtoOASpotEvent{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[14]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[15]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOASpotEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOASpotEvent) ProtoMessage() {}

func (x *ProtoOASpotEvent) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[14]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[15]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOASpotEvent.ProtoReflect.Descriptor instead.
func (*ProtoOASpotEvent) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{14}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{15}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOASpotEvent) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOASpotEvent_PayloadType
}

func (x *ProtoOASpotEvent) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOASpotEvent) GetSymbolId() int64 {
	if x != nil && x.SymbolId != nil {
		return *x.SymbolId
	}
	return 0
}

func (x *ProtoOASpotEvent) GetBid() uint64 {
	if x != nil && x.Bid != nil {
		return *x.Bid
	}
	return 0
}

func (x *ProtoOASpotEvent) GetAsk() uint64 {
	if x != nil && x.Ask != nil {
		return *x.Ask
	}
	return 0
}

func (x *ProtoOASpotEvent) GetTrendbar() []*ProtoOATrendbar {
	if x != nil {
		return x.Trendbar
	}
	return nil
}

func (x *ProtoOASpotEvent) GetSessionClose() uint64 {
	if x != nil && x.SessionClose != nil {
		return *x.SessionClose
	}
	return 0
}

// * Request for getting a conversion chain between two assets that consists of several symbols. Use when no direct quote is available
type ProtoOASymbolsForConversionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2118" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	FirstAssetId        *int64              `protobuf:"varint,3,req,name=firstAssetId" json:"firstAssetId,omitempty"`               // The ID of the firs asset in the conversation chain. e.g.: for EUR/USD the firstAssetId is EUR ID and lastAssetId is USD ID.
	LastAssetId         *int64              `protobuf:"varint,4,req,name=lastAssetId" json:"lastAssetId,omitempty"`                 // The ID of the last asset in the conversation chain. e.g.: for EUR/USD the firstAssetId is EUR ID and lastAssetId is USD ID.
}

// Default values for ProtoOASymbolsForConversionReq fields.
const (
	Default_ProtoOASymbolsForConversionReq_PayloadType = ProtoOAPayloadType_PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ
)

func (x *ProtoOASymbolsForConversionReq) Reset() {
	*x = ProtoOASymbolsForConversionReq{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[15]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[16]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOASymbolsForConversionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOASymbolsForConversionReq) ProtoMessage() {}

func (x *ProtoOASymbolsForConversionReq) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[15]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[16]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOASymbolsForConversionReq.ProtoReflect.Descriptor instead.
func (*ProtoOASymbolsForConversionReq) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{15}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{16}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOASymbolsForConversionReq) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOASymbolsForConversionReq_PayloadType
}

func (x *ProtoOASymbolsForConversionReq) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOASymbolsForConversionReq) GetFirstAssetId() int64 {
	if x != nil && x.FirstAssetId != nil {
		return *x.FirstAssetId
	}
	return 0
}

func (x *ProtoOASymbolsForConversionReq) GetLastAssetId() int64 {
	if x != nil && x.LastAssetId != nil {
		return *x.LastAssetId
	}
	return 0
}

// * Response to the ProtoOASymbolsForConversionReq request.
type ProtoOASymbolsForConversionRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType   `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2119" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64                `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	Symbol              []*ProtoOALightSymbol `protobuf:"bytes,3,rep,name=symbol" json:"symbol,omitempty"`                            // Conversion chain of the symbols (e.g. EUR/USD, USD/JPY, GBP/JPY -> EUR/GBP).
}

// Default values for ProtoOASymbolsForConversionRes fields.
const (
	Default_ProtoOASymbolsForConversionRes_PayloadType = ProtoOAPayloadType_PROTO_OA_SYMBOLS_FOR_CONVERSION_RES
)

func (x *ProtoOASymbolsForConversionRes) Reset() {
	*x = ProtoOASymbolsForConversionRes{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[16]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[17]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOASymbolsForConversionRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOASymbolsForConversionRes) ProtoMessage() {}

func (x *ProtoOASymbolsForConversionRes) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[16]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[17]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOASymbolsForConversionRes.ProtoReflect.Descriptor instead.
func (*ProtoOASymbolsForConversionRes) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{16}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{17}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOASymbolsForConversionRes) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOASymbolsForConversionRes_PayloadType
}

func (x *ProtoOASymbolsForConversionRes) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOASymbolsForConversionRes) GetSymbol() []*ProtoOALightSymbol {
	if x != nil {
		return x.Symbol
	}
	return nil
}

// * Request for the list of assets available for a trader's account.
type ProtoOAAssetListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2112" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
}

// Default values for ProtoOAAssetListReq fields.
const (
	Default_ProtoOAAssetListReq_PayloadType = ProtoOAPayloadType_PROTO_OA_ASSET_LIST_REQ
)

func (x *ProtoOAAssetListReq) Reset() {
	*x = ProtoOAAssetListReq{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[17]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[18]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOAAssetListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOAAssetListReq) ProtoMessage() {}

func (x *ProtoOAAssetListReq) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[17]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[18]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOAAssetListReq.ProtoReflect.Descriptor instead.
func (*ProtoOAAssetListReq) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{17}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{18}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOAAssetListReq) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOAAssetListReq_PayloadType
}

func (x *ProtoOAAssetListReq) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

// * Response to the ProtoOAAssetListReq request.
type ProtoOAAssetListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2113" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	Asset               []*ProtoOAAsset     `protobuf:"bytes,3,rep,name=asset" json:"asset,omitempty"`                              // The list of assets.
}

// Default values for ProtoOAAssetListRes fields.
const (
	Default_ProtoOAAssetListRes_PayloadType = ProtoOAPayloadType_PROTO_OA_ASSET_LIST_RES
)

func (x *ProtoOAAssetListRes) Reset() {
	*x = ProtoOAAssetListRes{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[18]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[19]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOAAssetListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOAAssetListRes) ProtoMessage() {}

func (x *ProtoOAAssetListRes) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[18]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[19]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOAAssetListRes.ProtoReflect.Descriptor instead.
func (*ProtoOAAssetListRes) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{18}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{19}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOAAssetListRes) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOAAssetListRes_PayloadType
}

func (x *ProtoOAAssetListRes) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOAAssetListRes) GetAsset() []*ProtoOAAsset {
	if x != nil {
		return x.Asset
	}
	return nil
}

// * Request for a list of symbols available for a trading account. Symbol entries are returned with the limited set of fields.
type ProtoOASymbolsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType            *ProtoOAPayloadType `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2114" json:"payloadType,omitempty"`
	CtidTraderAccountId    *int64              `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	IncludeArchivedSymbols *bool               `protobuf:"varint,3,opt,name=includeArchivedSymbols" json:"includeArchivedSymbols,omitempty"`
}

// Default values for ProtoOASymbolsListReq fields.
const (
	Default_ProtoOASymbolsListReq_PayloadType = ProtoOAPayloadType_PROTO_OA_SYMBOLS_LIST_REQ
)

func (x *ProtoOASymbolsListReq) Reset() {
	*x = ProtoOASymbolsListReq{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[19]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[20]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOASymbolsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOASymbolsListReq) ProtoMessage() {}

func (x *ProtoOASymbolsListReq) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[19]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[20]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOASymbolsListReq.ProtoReflect.Descriptor instead.
func (*ProtoOASymbolsListReq) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{19}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{20}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOASymbolsListReq) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOASymbolsListReq_PayloadType
}

func (x *ProtoOASymbolsListReq) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOASymbolsListReq) GetIncludeArchivedSymbols() bool {
	if x != nil && x.IncludeArchivedSymbols != nil {
		return *x.IncludeArchivedSymbols
	}
	return false
}

// * Response to the ProtoOASymbolsListReq request.
type ProtoOASymbolsListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadType         *ProtoOAPayloadType      `protobuf:"varint,1,opt,name=payloadType,enum=messages.ProtoOAPayloadType,def=2115" json:"payloadType,omitempty"`
	CtidTraderAccountId *int64                   `protobuf:"varint,2,req,name=ctidTraderAccountId" json:"ctidTraderAccountId,omitempty"` // Unique identifier of the trader's account. Used to match responses to trader's accounts.
	Symbol              []*ProtoOALightSymbol    `protobuf:"bytes,3,rep,name=symbol" json:"symbol,omitempty"`                            // The list of symbols.
	ArchivedSymbol      []*ProtoOAArchivedSymbol `protobuf:"bytes,4,rep,name=archivedSymbol" json:"archivedSymbol,omitempty"`            // The list of archived symbols.
}

// Default values for ProtoOASymbolsListRes fields.
const (
	Default_ProtoOASymbolsListRes_PayloadType = ProtoOAPayloadType_PROTO_OA_SYMBOLS_LIST_RES
)

func (x *ProtoOASymbolsListRes) Reset() {
	*x = ProtoOASymbolsListRes{}
	if protoimpl.UnsafeEnabled {
<<<<<<< HEAD
		mi := &file_OpenApiMessages_proto_msgTypes[20]
=======
		mi := &file_OpenApiMessages_proto_msgTypes[21]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoOASymbolsListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoOASymbolsListRes) ProtoMessage() {}

func (x *ProtoOASymbolsListRes) ProtoReflect() protoreflect.Message {
<<<<<<< HEAD
	mi := &file_OpenApiMessages_proto_msgTypes[20]
=======
	mi := &file_OpenApiMessages_proto_msgTypes[21]
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoOASymbolsListRes.ProtoReflect.Descriptor instead.
func (*ProtoOASymbolsListRes) Descriptor() ([]byte, []int) {
<<<<<<< HEAD
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{20}
=======
	return file_OpenApiMessages_proto_rawDescGZIP(), []int{21}
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func (x *ProtoOASymbolsListRes) GetPayloadType() ProtoOAPayloadType {
	if x != nil && x.PayloadType != nil {
		return *x.PayloadType
	}
	return Default_ProtoOASymbolsListRes_PayloadType
}

func (x *ProtoOASymbolsListRes) GetCtidTraderAccountId() int64 {
	if x != nil && x.CtidTraderAccountId != nil {
		return *x.CtidTraderAccountId
	}
	return 0
}

func (x *ProtoOASymbolsListRes) GetSymbol() []*ProtoOALightSymbol {
	if x != nil {
		return x.Symbol
	}
	return nil
}

func (x *ProtoOASymbolsListRes) GetArchivedSymbol() []*ProtoOAArchivedSymbol {
	if x != nil {
		return x.ArchivedSymbol
	}
	return nil
}

var File_OpenApiMessages_proto protoreflect.FileDescriptor

var file_OpenApiMessages_proto_rawDesc = []byte{
	0x0a, 0x15, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x1a, 0x1a, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x70, 0x69, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x01,
	0x0a, 0x19, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x5d, 0x0a, 0x0b, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x1d,
	0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x7a, 0x0a, 0x19, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x1d, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x41, 0x50, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x53, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x80, 0x02, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4f, 0x41, 0x44, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x56, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x3a, 0x16, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x44, 0x45, 0x41, 0x4c, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0d,
	0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x52, 0x6f, 0x77, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6d, 0x61, 0x78, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x91, 0x02, 0x0a, 0x0f, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x12, 0x52, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x3a, 0x12, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x52, 0x45, 0x53, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13,
	0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x17, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x63, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63,
	0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x99, 0x01,
	0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x53, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x13, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f,
	0x54, 0x52, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x10, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x12, 0x53,
	0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x3a, 0x13, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x54, 0x52, 0x41, 0x44,
	0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06,
<<<<<<< HEAD
	0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x22, 0xc6, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4f, 0x41, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
=======
	0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x22, 0xe4, 0x04, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4f, 0x41, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x58, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x3a, 0x18, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x45, 0x58,
	0x45, 0x43, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x52, 0x0b, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74,
	0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0d,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x65, 0x61, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x44, 0x65, 0x61, 0x6c, 0x52, 0x04, 0x64, 0x65,
	0x61, 0x6c, 0x12, 0x59, 0x0a, 0x14, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x4f, 0x41, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x14, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x4a, 0x0a,
	0x0f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x44, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x69, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xc6, 0x01,
	0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x19, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa4, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4f, 0x41, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	0x12, 0x59, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x3a, 0x19, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x41, 0x43,
<<<<<<< HEAD
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63,
	0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xa4, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f,
	0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x19, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41,
	0x55, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x53, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4f, 0x41, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x56,
	0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x3a, 0x16, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x52, 0x45, 0x43, 0x4f,
	0x4e, 0x43, 0x49, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x84, 0x02, 0x0a, 0x13, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4f, 0x41, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x12, 0x56, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x3a, 0x16, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x52, 0x45,
	0x43, 0x4f, 0x4e, 0x43, 0x49, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x53, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x4f, 0x41, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22,
	0xbf, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x19, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x5f, 0x42, 0x59, 0x5f,
	0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49,
	0x64, 0x22, 0xd4, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x53, 0x79, 0x6d,
	0x62, 0x6f, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x19, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x5f, 0x42,
	0x59, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0xc6, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4f, 0x41, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x70, 0x6f,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x5c, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
=======
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x53, 0x52, 0x0b,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63,
	0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9f, 0x01,
	0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x52, 0x65, 0x63, 0x6f, 0x6e, 0x63, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x56, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x16, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f,
	0x4f, 0x41, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x43, 0x49, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x51,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a,
	0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x84, 0x02, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x52, 0x65, 0x63, 0x6f, 0x6e,
	0x63, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x12, 0x56, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x16, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x43, 0x49, 0x4c, 0x45, 0x5f, 0x52,
	0x45, 0x53, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74,
	0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xbf, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4f, 0x41, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x59, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x3a, 0x19, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53, 0x59, 0x4d,
	0x42, 0x4f, 0x4c, 0x5f, 0x42, 0x59, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74,
	0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0xd4, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4f, 0x41, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x3a, 0x19, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53,
	0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x5f, 0x42, 0x59, 0x5f, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x52,
	0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f,
	0x41, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22,
	0xc6, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x5c, 0x0a, 0x0b,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a,
	0x1c, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52,
	0x49, 0x42, 0x45, 0x5f, 0x53, 0x50, 0x4f, 0x54, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74,
	0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4f, 0x41, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x70, 0x6f,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x5c, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x1c, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f,
	0x4f, 0x41, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x5f, 0x53, 0x50, 0x4f,
<<<<<<< HEAD
	0x54, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49,
	0x64, 0x22, 0xaa, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x12, 0x5c,
	0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x3a, 0x1c, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53, 0x55, 0x42, 0x53,
	0x43, 0x52, 0x49, 0x42, 0x45, 0x5f, 0x53, 0x50, 0x4f, 0x54, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x52,
	0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb4,
	0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x53, 0x70, 0x6f, 0x74, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x13, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41,
	0x5f, 0x53, 0x50, 0x4f, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x08, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x61, 0x73, 0x6b, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x72,
	0x65, 0x6e, 0x64, 0x62, 0x61, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x54,
	0x72, 0x65, 0x6e, 0x64, 0x62, 0x61, 0x72, 0x52, 0x08, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x62, 0x61,
	0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x22, 0xfd, 0x01, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f,
	0x41, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x63, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x23, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x53, 0x5f, 0x46, 0x4f,
	0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a,
	0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0xed, 0x01, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f,
	0x41, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x63, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x23, 0x50, 0x52, 0x4f,
	0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x53, 0x5f, 0x46, 0x4f,
	0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a,
	0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x34, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4f, 0x41, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0xa0, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f,
	0x41, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x57, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x3a, 0x17, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x41, 0x53, 0x53, 0x45, 0x54,
	0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4f, 0x41, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x12, 0x57, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x3a, 0x17, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x41, 0x53,
	0x53, 0x45, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x52, 0x0b, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69,
	0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x22, 0xdc, 0x01, 0x0a, 0x15, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x19, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41,
	0x5f, 0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45,
	0x51, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30,
	0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69,
	0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x36, 0x0a, 0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69,
	0x76, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x15, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4f, 0x41, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x19, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f,
	0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x53, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a,
	0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x34, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4f, 0x41, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x06, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x47, 0x0a, 0x0e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x0e,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x21,
	0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x61, 0x72,
	0x6c, 0x6f, 0x73, 0x6f, 0x6b, 0x75, 0x6d, 0x75, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73,
=======
	0x54, 0x53, 0x5f, 0x52, 0x45, 0x53, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb4, 0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f,
	0x41, 0x53, 0x70, 0x6f, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x53, 0x0a, 0x0b, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x13, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53, 0x50, 0x4f, 0x54, 0x5f, 0x45, 0x56, 0x45,
	0x4e, 0x54, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74,
	0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x03, 0x52, 0x08, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x62, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x62, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x61, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x61, 0x73,
	0x6b, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x62, 0x61, 0x72, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x54, 0x72, 0x65, 0x6e, 0x64, 0x62, 0x61, 0x72, 0x52, 0x08,
	0x74, 0x72, 0x65, 0x6e, 0x64, 0x62, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x22, 0xfd, 0x01, 0x0a,
	0x1e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x46,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x63, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x3a, 0x23, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53, 0x59, 0x4d,
	0x42, 0x4f, 0x4c, 0x53, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x03, 0x52,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0xed, 0x01, 0x0a,
	0x1e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x46,
	0x6f, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x12,
	0x63, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x3a, 0x23, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53, 0x59, 0x4d,
	0x42, 0x4f, 0x4c, 0x53, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x4e, 0x56, 0x45, 0x52, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0xa0, 0x01, 0x0a,
	0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x57, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x17, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f,
	0x41, 0x5f, 0x41, 0x53, 0x53, 0x45, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a,
	0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xce, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x17, 0x50, 0x52, 0x4f, 0x54,
	0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x41, 0x53, 0x53, 0x45, 0x54, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f,
	0x52, 0x45, 0x53, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x13, 0x63,
	0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4f, 0x41, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x22, 0xdc, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4f, 0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x19, 0x50,
	0x52, 0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x53, 0x5f,
	0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61,
	0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x22,
	0xa3, 0x02, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x59, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f,
	0x41, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x19, 0x50, 0x52,
	0x4f, 0x54, 0x4f, 0x5f, 0x4f, 0x41, 0x5f, 0x53, 0x59, 0x4d, 0x42, 0x4f, 0x4c, 0x53, 0x5f, 0x4c,
	0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x03, 0x52, 0x13, 0x63, 0x74, 0x69, 0x64, 0x54, 0x72, 0x61, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x53, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x47, 0x0a, 0x0e,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4f, 0x41, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x0e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x61, 0x72, 0x6c, 0x6f, 0x73, 0x6f, 0x6b, 0x75, 0x6d, 0x75, 0x2f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

var (
	file_OpenApiMessages_proto_rawDescOnce sync.Once
	file_OpenApiMessages_proto_rawDescData = file_OpenApiMessages_proto_rawDesc
)

func file_OpenApiMessages_proto_rawDescGZIP() []byte {
	file_OpenApiMessages_proto_rawDescOnce.Do(func() {
		file_OpenApiMessages_proto_rawDescData = protoimpl.X.CompressGZIP(file_OpenApiMessages_proto_rawDescData)
	})
	return file_OpenApiMessages_proto_rawDescData
}

<<<<<<< HEAD
var file_OpenApiMessages_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
=======
var file_OpenApiMessages_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
var file_OpenApiMessages_proto_goTypes = []interface{}{
	(*ProtoOAApplicationAuthReq)(nil),      // 0: messages.ProtoOAApplicationAuthReq
	(*ProtoOAApplicationAuthRes)(nil),      // 1: messages.ProtoOAApplicationAuthRes
	(*ProtoOADealListReq)(nil),             // 2: messages.ProtoOADealListReq
	(*ProtoOAErrorRes)(nil),                // 3: messages.ProtoOAErrorRes
	(*ProtoOATraderReq)(nil),               // 4: messages.ProtoOATraderReq
	(*ProtoOATraderRes)(nil),               // 5: messages.ProtoOATraderRes
<<<<<<< HEAD
	(*ProtoOAAccountAuthReq)(nil),          // 6: messages.ProtoOAAccountAuthReq
	(*ProtoOAAccountAuthRes)(nil),          // 7: messages.ProtoOAAccountAuthRes
	(*ProtoOAReconcileReq)(nil),            // 8: messages.ProtoOAReconcileReq
	(*ProtoOAReconcileRes)(nil),            // 9: messages.ProtoOAReconcileRes
	(*ProtoOASymbolByIdReq)(nil),           // 10: messages.ProtoOASymbolByIdReq
	(*ProtoOASymbolByIdRes)(nil),           // 11: messages.ProtoOASymbolByIdRes
	(*ProtoOASubscribeSpotsReq)(nil),       // 12: messages.ProtoOASubscribeSpotsReq
	(*ProtoOASubscribeSpotsRes)(nil),       // 13: messages.ProtoOASubscribeSpotsRes
	(*ProtoOASpotEvent)(nil),               // 14: messages.ProtoOASpotEvent
	(*ProtoOASymbolsForConversionReq)(nil), // 15: messages.ProtoOASymbolsForConversionReq
	(*ProtoOASymbolsForConversionRes)(nil), // 16: messages.ProtoOASymbolsForConversionRes
	(*ProtoOAAssetListReq)(nil),            // 17: messages.ProtoOAAssetListReq
	(*ProtoOAAssetListRes)(nil),            // 18: messages.ProtoOAAssetListRes
	(*ProtoOASymbolsListReq)(nil),          // 19: messages.ProtoOASymbolsListReq
	(*ProtoOASymbolsListRes)(nil),          // 20: messages.ProtoOASymbolsListRes
	(ProtoOAPayloadType)(0),                // 21: messages.ProtoOAPayloadType
	(*ProtoOATrader)(nil),                  // 22: messages.ProtoOATrader
	(*ProtoOAPosition)(nil),                // 23: messages.ProtoOAPosition
	(*ProtoOAOrder)(nil),                   // 24: messages.ProtoOAOrder
	(*ProtoOASymbol)(nil),                  // 25: messages.ProtoOASymbol
	(*ProtoOATrendbar)(nil),                // 26: messages.ProtoOATrendbar
	(*ProtoOALightSymbol)(nil),             // 27: messages.ProtoOALightSymbol
	(*ProtoOAAsset)(nil),                   // 28: messages.ProtoOAAsset
	(*ProtoOAArchivedSymbol)(nil),          // 29: messages.ProtoOAArchivedSymbol
}
var file_OpenApiMessages_proto_depIdxs = []int32{
	21, // 0: messages.ProtoOAApplicationAuthReq.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 1: messages.ProtoOAApplicationAuthRes.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 2: messages.ProtoOADealListReq.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 3: messages.ProtoOAErrorRes.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 4: messages.ProtoOATraderReq.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 5: messages.ProtoOATraderRes.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 6: messages.ProtoOATraderRes.trader:type_name -> messages.ProtoOATrader
	21, // 7: messages.ProtoOAAccountAuthReq.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 8: messages.ProtoOAAccountAuthRes.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 9: messages.ProtoOAReconcileReq.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 10: messages.ProtoOAReconcileRes.payloadType:type_name -> messages.ProtoOAPayloadType
	23, // 11: messages.ProtoOAReconcileRes.position:type_name -> messages.ProtoOAPosition
	24, // 12: messages.ProtoOAReconcileRes.order:type_name -> messages.ProtoOAOrder
	21, // 13: messages.ProtoOASymbolByIdReq.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 14: messages.ProtoOASymbolByIdRes.payloadType:type_name -> messages.ProtoOAPayloadType
	25, // 15: messages.ProtoOASymbolByIdRes.symbol:type_name -> messages.ProtoOASymbol
	21, // 16: messages.ProtoOASubscribeSpotsReq.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 17: messages.ProtoOASubscribeSpotsRes.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 18: messages.ProtoOASpotEvent.payloadType:type_name -> messages.ProtoOAPayloadType
	26, // 19: messages.ProtoOASpotEvent.trendbar:type_name -> messages.ProtoOATrendbar
	21, // 20: messages.ProtoOASymbolsForConversionReq.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 21: messages.ProtoOASymbolsForConversionRes.payloadType:type_name -> messages.ProtoOAPayloadType
	27, // 22: messages.ProtoOASymbolsForConversionRes.symbol:type_name -> messages.ProtoOALightSymbol
	21, // 23: messages.ProtoOAAssetListReq.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 24: messages.ProtoOAAssetListRes.payloadType:type_name -> messages.ProtoOAPayloadType
	28, // 25: messages.ProtoOAAssetListRes.asset:type_name -> messages.ProtoOAAsset
	21, // 26: messages.ProtoOASymbolsListReq.payloadType:type_name -> messages.ProtoOAPayloadType
	21, // 27: messages.ProtoOASymbolsListRes.payloadType:type_name -> messages.ProtoOAPayloadType
	27, // 28: messages.ProtoOASymbolsListRes.symbol:type_name -> messages.ProtoOALightSymbol
	29, // 29: messages.ProtoOASymbolsListRes.archivedSymbol:type_name -> messages.ProtoOAArchivedSymbol
	30, // [30:30] is the sub-list for method output_type
	30, // [30:30] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
=======
	(*ProtoOAExecutionEvent)(nil),          // 6: messages.ProtoOAExecutionEvent
	(*ProtoOAAccountAuthReq)(nil),          // 7: messages.ProtoOAAccountAuthReq
	(*ProtoOAAccountAuthRes)(nil),          // 8: messages.ProtoOAAccountAuthRes
	(*ProtoOAReconcileReq)(nil),            // 9: messages.ProtoOAReconcileReq
	(*ProtoOAReconcileRes)(nil),            // 10: messages.ProtoOAReconcileRes
	(*ProtoOASymbolByIdReq)(nil),           // 11: messages.ProtoOASymbolByIdReq
	(*ProtoOASymbolByIdRes)(nil),           // 12: messages.ProtoOASymbolByIdRes
	(*ProtoOASubscribeSpotsReq)(nil),       // 13: messages.ProtoOASubscribeSpotsReq
	(*ProtoOASubscribeSpotsRes)(nil),       // 14: messages.ProtoOASubscribeSpotsRes
	(*ProtoOASpotEvent)(nil),               // 15: messages.ProtoOASpotEvent
	(*ProtoOASymbolsForConversionReq)(nil), // 16: messages.ProtoOASymbolsForConversionReq
	(*ProtoOASymbolsForConversionRes)(nil), // 17: messages.ProtoOASymbolsForConversionRes
	(*ProtoOAAssetListReq)(nil),            // 18: messages.ProtoOAAssetListReq
	(*ProtoOAAssetListRes)(nil),            // 19: messages.ProtoOAAssetListRes
	(*ProtoOASymbolsListReq)(nil),          // 20: messages.ProtoOASymbolsListReq
	(*ProtoOASymbolsListRes)(nil),          // 21: messages.ProtoOASymbolsListRes
	(ProtoOAPayloadType)(0),                // 22: messages.ProtoOAPayloadType
	(*ProtoOATrader)(nil),                  // 23: messages.ProtoOATrader
	(ProtoOAExecutionType)(0),              // 24: messages.ProtoOAExecutionType
	(*ProtoOAPosition)(nil),                // 25: messages.ProtoOAPosition
	(*ProtoOAOrder)(nil),                   // 26: messages.ProtoOAOrder
	(*ProtoOADeal)(nil),                    // 27: messages.ProtoOADeal
	(*ProtoOABonusDepositWithdraw)(nil),    // 28: messages.ProtoOABonusDepositWithdraw
	(*ProtoOADepositWithdraw)(nil),         // 29: messages.ProtoOADepositWithdraw
	(*ProtoOASymbol)(nil),                  // 30: messages.ProtoOASymbol
	(*ProtoOATrendbar)(nil),                // 31: messages.ProtoOATrendbar
	(*ProtoOALightSymbol)(nil),             // 32: messages.ProtoOALightSymbol
	(*ProtoOAAsset)(nil),                   // 33: messages.ProtoOAAsset
	(*ProtoOAArchivedSymbol)(nil),          // 34: messages.ProtoOAArchivedSymbol
}
var file_OpenApiMessages_proto_depIdxs = []int32{
	22, // 0: messages.ProtoOAApplicationAuthReq.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 1: messages.ProtoOAApplicationAuthRes.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 2: messages.ProtoOADealListReq.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 3: messages.ProtoOAErrorRes.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 4: messages.ProtoOATraderReq.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 5: messages.ProtoOATraderRes.payloadType:type_name -> messages.ProtoOAPayloadType
	23, // 6: messages.ProtoOATraderRes.trader:type_name -> messages.ProtoOATrader
	22, // 7: messages.ProtoOAExecutionEvent.payloadType:type_name -> messages.ProtoOAPayloadType
	24, // 8: messages.ProtoOAExecutionEvent.executionType:type_name -> messages.ProtoOAExecutionType
	25, // 9: messages.ProtoOAExecutionEvent.position:type_name -> messages.ProtoOAPosition
	26, // 10: messages.ProtoOAExecutionEvent.order:type_name -> messages.ProtoOAOrder
	27, // 11: messages.ProtoOAExecutionEvent.deal:type_name -> messages.ProtoOADeal
	28, // 12: messages.ProtoOAExecutionEvent.bonusDepositWithdraw:type_name -> messages.ProtoOABonusDepositWithdraw
	29, // 13: messages.ProtoOAExecutionEvent.depositWithdraw:type_name -> messages.ProtoOADepositWithdraw
	22, // 14: messages.ProtoOAAccountAuthReq.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 15: messages.ProtoOAAccountAuthRes.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 16: messages.ProtoOAReconcileReq.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 17: messages.ProtoOAReconcileRes.payloadType:type_name -> messages.ProtoOAPayloadType
	25, // 18: messages.ProtoOAReconcileRes.position:type_name -> messages.ProtoOAPosition
	26, // 19: messages.ProtoOAReconcileRes.order:type_name -> messages.ProtoOAOrder
	22, // 20: messages.ProtoOASymbolByIdReq.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 21: messages.ProtoOASymbolByIdRes.payloadType:type_name -> messages.ProtoOAPayloadType
	30, // 22: messages.ProtoOASymbolByIdRes.symbol:type_name -> messages.ProtoOASymbol
	22, // 23: messages.ProtoOASubscribeSpotsReq.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 24: messages.ProtoOASubscribeSpotsRes.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 25: messages.ProtoOASpotEvent.payloadType:type_name -> messages.ProtoOAPayloadType
	31, // 26: messages.ProtoOASpotEvent.trendbar:type_name -> messages.ProtoOATrendbar
	22, // 27: messages.ProtoOASymbolsForConversionReq.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 28: messages.ProtoOASymbolsForConversionRes.payloadType:type_name -> messages.ProtoOAPayloadType
	32, // 29: messages.ProtoOASymbolsForConversionRes.symbol:type_name -> messages.ProtoOALightSymbol
	22, // 30: messages.ProtoOAAssetListReq.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 31: messages.ProtoOAAssetListRes.payloadType:type_name -> messages.ProtoOAPayloadType
	33, // 32: messages.ProtoOAAssetListRes.asset:type_name -> messages.ProtoOAAsset
	22, // 33: messages.ProtoOASymbolsListReq.payloadType:type_name -> messages.ProtoOAPayloadType
	22, // 34: messages.ProtoOASymbolsListRes.payloadType:type_name -> messages.ProtoOAPayloadType
	32, // 35: messages.ProtoOASymbolsListRes.symbol:type_name -> messages.ProtoOALightSymbol
	34, // 36: messages.ProtoOASymbolsListRes.archivedSymbol:type_name -> messages.ProtoOAArchivedSymbol
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
}

func init() { file_OpenApiMessages_proto_init() }
func file_OpenApiMessages_proto_init() {
	if File_OpenApiMessages_proto != nil {
		return
	}
	file_OpenApiModelMessages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_OpenApiMessages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoOAApplicationAuthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoOAApplicationAuthRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoOADealListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoOAErrorRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoOATraderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoOATraderRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOAAccountAuthReq); i {
=======
			switch v := v.(*ProtoOAExecutionEvent); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOAAccountAuthRes); i {
=======
			switch v := v.(*ProtoOAAccountAuthReq); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOAReconcileReq); i {
=======
			switch v := v.(*ProtoOAAccountAuthRes); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOAReconcileRes); i {
=======
			switch v := v.(*ProtoOAReconcileReq); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOASymbolByIdReq); i {
=======
			switch v := v.(*ProtoOAReconcileRes); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOASymbolByIdRes); i {
=======
			switch v := v.(*ProtoOASymbolByIdReq); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOASubscribeSpotsReq); i {
=======
			switch v := v.(*ProtoOASymbolByIdRes); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOASubscribeSpotsRes); i {
=======
			switch v := v.(*ProtoOASubscribeSpotsReq); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOASpotEvent); i {
=======
			switch v := v.(*ProtoOASubscribeSpotsRes); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOASymbolsForConversionReq); i {
=======
			switch v := v.(*ProtoOASpotEvent); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOASymbolsForConversionRes); i {
=======
			switch v := v.(*ProtoOASymbolsForConversionReq); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOAAssetListReq); i {
=======
			switch v := v.(*ProtoOASymbolsForConversionRes); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOAAssetListRes); i {
=======
			switch v := v.(*ProtoOAAssetListReq); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
			switch v := v.(*ProtoOASymbolsListReq); i {
=======
			switch v := v.(*ProtoOAAssetListRes); i {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
<<<<<<< HEAD
=======
			switch v := v.(*ProtoOASymbolsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_OpenApiMessages_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			switch v := v.(*ProtoOASymbolsListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_OpenApiMessages_proto_rawDesc,
			NumEnums:      0,
<<<<<<< HEAD
			NumMessages:   21,
=======
			NumMessages:   22,
>>>>>>> 96c65c03dc14288996da5e4a6b2ee606824552ee
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_OpenApiMessages_proto_goTypes,
		DependencyIndexes: file_OpenApiMessages_proto_depIdxs,
		MessageInfos:      file_OpenApiMessages_proto_msgTypes,
	}.Build()
	File_OpenApiMessages_proto = out.File
	file_OpenApiMessages_proto_rawDesc = nil
	file_OpenApiMessages_proto_goTypes = nil
	file_OpenApiMessages_proto_depIdxs = nil
}
